Index: app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/AddProductFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.seller.sellerFragment;\r\n\r\nimport android.Manifest;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.provider.MediaStore;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.wastedfoodteam.R;\r\nimport com.example.wastedfoodteam.seller.AddProductActivity;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.StorageTask;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.UUID;\r\n\r\npublic class AddProductFragment extends Fragment {\r\n\r\n    private int seller_id;\r\n    private String storage_location;\r\n\r\n\r\n    //ui view\r\n    private ImageView iv_add_product_icon;\r\n    private EditText editText_add_product_name;\r\n    private EditText editText_add_product_originalPrice;\r\n    private EditText editText_add_product_sellPrice;\r\n    private EditText editText_add_product_openTime;\r\n    private EditText editText_add_product_closeTime;\r\n    private EditText editText_add_product_saleDate;\r\n    private Button btn_add_product_add;\r\n\r\n    //permission constants\r\n    private static final int CAMERA_REQUEST_CODE = 200;\r\n    private static final int STORAGE_REQUEST_CODE = 300;\r\n\r\n    //image pick constants\r\n    private static final int IMAGE_PICK_GALLERY_CODE = 400;\r\n    private static final int IMAGE_PICK_CAMERA_CODE = 500;\r\n\r\n    //permission array\r\n    private String[] cameraPermission;\r\n    private String[] storagePermission;\r\n\r\n    //image pick uri\r\n    private Uri image_uri;\r\n\r\n    //\r\n    private StorageTask uploadTask;\r\n\r\n    //for time picker\r\n    private int mHour, mMinute, mSecond, day, month, year;\r\n\r\n    // instance for firebase storage and StorageReference\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n\r\n    String name, image, description, status;\r\n    double original_price, sell_price;\r\n    int original_quantity, remain_quantity;\r\n    String start_time, end_time, sell_date;\r\n\r\n    final Calendar calendar = Calendar.getInstance();\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        //get seller id from seller home activity\r\n        Bundle bundle = getArguments();\r\n        seller_id = bundle.getInt(\"seller_id\");\r\n\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_add_product, container, false);\r\n\r\n        // get the Firebase  storage reference\r\n        storage = FirebaseStorage.getInstance();\r\n        storageReference = storage.getReference();\r\n\r\n        //init ui view\r\n        iv_add_product_icon = view.findViewById(R.id.iv_add_product_icon);\r\n        editText_add_product_name = view.findViewById(R.id.editText_add_product_name);\r\n        editText_add_product_originalPrice = view.findViewById(R.id.editText_add_product_originalPrice);\r\n        editText_add_product_sellPrice = view.findViewById(R.id.editText_add_product_sellPrice);\r\n        editText_add_product_openTime = view.findViewById(R.id.editText_add_product_openTime);\r\n        editText_add_product_closeTime = view.findViewById(R.id.editText_add_product_closeTime);\r\n        editText_add_product_saleDate = view.findViewById(R.id.editText_add_product_saleDate);\r\n        btn_add_product_add = view.findViewById(R.id.btn_add_product_add);\r\n\r\n        //Date picker handle\r\n        year = calendar.get(Calendar.YEAR);\r\n        month = calendar.get(Calendar.MONTH);\r\n        day = calendar.get(Calendar.DAY_OF_MONTH);\r\n        editText_add_product_saleDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                DatePickerDialog datePickerDialog = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n                    @Override\r\n                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                        String dateString = String.format(\"%d-%02d-%02d\", year, month + 1, dayOfMonth);\r\n                        editText_add_product_saleDate.setText(dateString);\r\n                    }\r\n                }, year, month, day);\r\n                datePickerDialog.show();\r\n            }\r\n        });\r\n        final Calendar calendar1 = Calendar.getInstance();\r\n        mHour = calendar1.get(Calendar.HOUR_OF_DAY);\r\n        mMinute = calendar1.get(Calendar.MINUTE);\r\n        mSecond = calendar1.get(Calendar.SECOND);\r\n\r\n        editText_add_product_openTime.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Launch Time Picker Dialog\r\n                TimePickerDialog timePickerDialog = new TimePickerDialog(getContext(),\r\n                        new TimePickerDialog.OnTimeSetListener() {\r\n\r\n                            @Override\r\n                            public void onTimeSet(TimePicker view, int hourOfDay,\r\n                                                  int minute) {\r\n\r\n\r\n                                editText_add_product_openTime.setText(String.format(\"%02d:%02d\", hourOfDay, minute));\r\n                            }\r\n                        }, mHour, mMinute, false);\r\n                timePickerDialog.show();\r\n            }\r\n        });\r\n\r\n        iv_add_product_icon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImagePickDialog();\r\n            }\r\n        });\r\n\r\n\r\n        editText_add_product_closeTime.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Launch Time Picker Dialog\r\n                TimePickerDialog timePickerDialog = new TimePickerDialog(getContext(),\r\n                        new TimePickerDialog.OnTimeSetListener() {\r\n\r\n                            @Override\r\n                            public void onTimeSet(TimePicker view, int hourOfDay,\r\n                                                  int minute) {\r\n\r\n                                editText_add_product_closeTime.setText(String.format(\"%02d:%02d\", hourOfDay, minute));\r\n                            }\r\n                        }, mHour, mMinute, false);\r\n                timePickerDialog.show();\r\n            }\r\n        });\r\n\r\n\r\n        btn_add_product_add.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                addProduct(\"http://192.168.1.10/wastedfoodphp/seller/SellerCreateProduct.php\");\r\n            }\r\n        });\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    //\r\n    private void addProduct(String url) {\r\n        String timestamp = \"\" + System.currentTimeMillis();\r\n\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n                        if (response.trim().equals(\"Succesfully update\")) {\r\n                            Toast.makeText(getActivity(), \"Cập nhật thành công\", Toast.LENGTH_SHORT);\r\n                            //TODO move back to home\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Lỗi cập nhật\", Toast.LENGTH_SHORT);\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(getActivity(), \"Xảy ra lỗi, vui lòng thử lại\", Toast.LENGTH_SHORT);\r\n                    }\r\n                }\r\n        ) {\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"seller_id\", String.valueOf(seller_id));\r\n                params.put(\"name\", editText_add_product_name.getText().toString());\r\n                if (image_uri != null) {\r\n                    uploadImage();\r\n                    params.put(\"image\", storage_location);\r\n                }\r\n                params.put(\"start_time\", editText_add_product_saleDate.getText().toString() + \" \" + editText_add_product_openTime.getText().toString());\r\n                params.put(\"end_time\", editText_add_product_saleDate.getText().toString() + \" \" + editText_add_product_closeTime.getText().toString());\r\n                params.put(\"original_price\", editText_add_product_originalPrice.getText().toString());\r\n                params.put(\"sell_price\", editText_add_product_sellPrice.getText().toString());\r\n                //TODO\r\n                params.put(\"original_quantity\", \"1\");\r\n                params.put(\"remain_quantity\", \"1\");\r\n                params.put(\"description\", \"1\");\r\n                params.put(\"status\", \"selling\");\r\n                params.put(\"sell_date\", editText_add_product_saleDate.getText().toString() + \" \" + editText_add_product_openTime.getText().toString());\r\n                return params;\r\n            }\r\n        };\r\n        requestQueue.add(stringRequest);\r\n\r\n    }\r\n\r\n\r\n    //start of for camera handle\r\n    private void pickFromGallery() {\r\n        //intent to pick image from gallery\r\n        Intent intent = new Intent(Intent.ACTION_PICK);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(intent, IMAGE_PICK_GALLERY_CODE);\r\n    }\r\n\r\n    private void showImagePickDialog() {\r\n        //display in dialog\r\n        String[] options = {\"Camera\", \"Gallery\"};\r\n        //dialog\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        builder.setTitle(\"Pick Image\").setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //handle item clicks\r\n                if (which == 0) {\r\n                    //camera clicked\r\n                    if (checkCameraPermission()) {\r\n                        //permission granted\r\n                        pickFromCamera();\r\n                    } else {\r\n                        //permission not granted, request\r\n                        requestCameraPermission();\r\n                    }\r\n                } else {\r\n                    //gallery clicked\r\n                    if (checkStoragePermission()) {\r\n                        //permission granted\r\n                        pickFromGallery();\r\n                    } else {\r\n                        //permission not granted, request\r\n                        requestStoragePermission();\r\n                    }\r\n                }\r\n            }\r\n        }).show();\r\n    }\r\n\r\n    private void pickFromCamera() {\r\n        //intent to pick image from camera\r\n\r\n        //use media store to pick high/ori quality image\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(MediaStore.Images.Media.TITLE, \"Temp_Image_Title\");\r\n        contentValues.put(MediaStore.Images.Media.DESCRIPTION, \"Temp_Image_Description\");\r\n\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        intent.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n        startActivityForResult(intent, IMAGE_PICK_CAMERA_CODE);\r\n    }\r\n\r\n    private boolean checkStoragePermission() {\r\n        boolean result = ContextCompat.checkSelfPermission(getContext(), Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        return result; //return true/false\r\n    }\r\n\r\n    private void requestStoragePermission() {\r\n        ActivityCompat.requestPermissions(getActivity(), storagePermission, STORAGE_REQUEST_CODE);\r\n    }\r\n\r\n    private boolean checkCameraPermission() {\r\n        boolean resultCamera = ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CAMERA) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        boolean resultExternalStorage = ContextCompat.checkSelfPermission(getContext(), Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        return resultCamera && resultExternalStorage;\r\n    }\r\n\r\n    private void requestCameraPermission() {\r\n        ActivityCompat.requestPermissions(getActivity(), cameraPermission, CAMERA_REQUEST_CODE);\r\n    }\r\n\r\n    //end of for camera handle\r\n\r\n    //handle image pick result\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        if (resultCode == -1) {\r\n            if (requestCode == IMAGE_PICK_GALLERY_CODE) {\r\n                //image pick from gallery\r\n\r\n                //save picked image uri\r\n                image_uri = data.getData();\r\n\r\n                //image picked from camera\r\n                iv_add_product_icon.setImageURI(image_uri);\r\n            } else if (requestCode == IMAGE_PICK_CAMERA_CODE) {\r\n                //image pick from camera\r\n                iv_add_product_icon.setImageURI(image_uri);\r\n            }\r\n        }\r\n\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    // UploadImage method\r\n    private void uploadImage() {\r\n        // Defining the child of storageReference\r\n        StorageReference ref\r\n                = storageReference\r\n                .child(\r\n                        \"images/\"\r\n                                + UUID.randomUUID().toString());\r\n\r\n        // adding listeners on upload\r\n        // or failure of image\r\n        ref.putFile(image_uri)\r\n                .addOnSuccessListener(\r\n                        new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n\r\n                            @Override\r\n                            public void onSuccess(\r\n                                    UploadTask.TaskSnapshot taskSnapshot) {\r\n\r\n                                // Image uploaded successfully\r\n                                Toast\r\n                                        .makeText(getActivity(),\r\n                                                \"Image Uploaded!!\",\r\n                                                Toast.LENGTH_SHORT)\r\n                                        .show();\r\n                                taskSnapshot.getMetadata().getReference().getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                                    @Override\r\n                                    public void onSuccess(Uri uri) {\r\n                                        storage_location = uri.toString();\r\n                                        Toast\r\n                                                .makeText(getActivity(),\r\n                                                        uri.toString(),\r\n                                                        Toast.LENGTH_LONG)\r\n                                                .show();\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                        // Error, Image not uploaded\r\n                        Toast\r\n                                .makeText(getActivity(),\r\n                                        \"Failed \" + e.getMessage(),\r\n                                        Toast.LENGTH_SHORT)\r\n                                .show();\r\n                    }\r\n                })\r\n                .addOnProgressListener(\r\n                        new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n\r\n                            // Progress Listener for loading\r\n                            // percentage on the dialog box\r\n                            @Override\r\n                            public void onProgress(\r\n                                    UploadTask.TaskSnapshot taskSnapshot) {\r\n                                double progress\r\n                                        = (100.0\r\n                                        * taskSnapshot.getBytesTransferred()\r\n                                        / taskSnapshot.getTotalByteCount());\r\n                            }\r\n                        });\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/AddProductFragment.java	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/AddProductFragment.java	(date 1603789456400)
@@ -38,6 +38,7 @@
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
 import com.example.wastedfoodteam.R;
+import com.example.wastedfoodteam.global.Variable;
 import com.example.wastedfoodteam.seller.AddProductActivity;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
@@ -205,7 +206,9 @@
         btn_add_product_add.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                addProduct("http://192.168.1.10/wastedfoodphp/seller/SellerCreateProduct.php");
+                String urlGetData = Variable.ipAddress + Variable.ADD_PRODUCT_SELLER;
+                //addProduct("http://192.168.1.10/wastedfoodphp/seller/SellerCreateProduct.php");
+                addProduct(urlGetData);
             }
         });
 
@@ -415,21 +418,7 @@
                                         Toast.LENGTH_SHORT)
                                 .show();
                     }
-                })
-                .addOnProgressListener(
-                        new OnProgressListener<UploadTask.TaskSnapshot>() {
-
-                            // Progress Listener for loading
-                            // percentage on the dialog box
-                            @Override
-                            public void onProgress(
-                                    UploadTask.TaskSnapshot taskSnapshot) {
-                                double progress
-                                        = (100.0
-                                        * taskSnapshot.getBytesTransferred()
-                                        / taskSnapshot.getTotalByteCount());
-                            }
-                        });
+                });
     }
 
 
Index: app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/ListProductSellerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.seller.sellerFragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.wastedfoodteam.R;\r\nimport com.example.wastedfoodteam.global.Variable;\r\nimport com.example.wastedfoodteam.seller.sellerAdapter.ProductSellerAdapter;\r\nimport com.example.wastedfoodteam.model.Product;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class ListProductSellerFragment extends Fragment {\r\n\r\n    ArrayList<Product> arrProduct;\r\n    ProductSellerAdapter adapter;\r\n    ArrayAdapter<Product> arrayAdapter;\r\n    ListView lvProduct;\r\n    int seller_id;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_list_product_seller, container, false);\r\n        //mapping view\r\n        lvProduct = view.findViewById(R.id.listProduct);\r\n        Bundle bundle = getArguments();\r\n        arrProduct = new ArrayList<Product>();\r\n        seller_id = bundle.getInt(\"id\");\r\n        String urlGetData = Variable.ipAddress + \"seller/getListProductSeller.php?seller_id=\" + seller_id;\r\n        adapter = new ProductSellerAdapter( getActivity().getApplicationContext(), R.layout.list_seller_product , arrProduct);\r\n        lvProduct.setAdapter(adapter);\r\n        getData(urlGetData);\r\n        return view;\r\n    }\r\n\r\n    public void getData(String url) {\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity().getApplicationContext());\r\n        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(Request.Method.GET, url, null,\r\n                new Response.Listener<JSONArray>() {\r\n                    @Override\r\n                    public void onResponse(JSONArray response) {\r\n                        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n                        for (int i = 0; i < response.length(); i++) {\r\n                            try {\r\n                                JSONObject object = response.getJSONObject(i);\r\n                                arrProduct.add(new Product(object.getInt(\"Id\"),\r\n                                        object.getInt(\"SellerId\"),\r\n                                        object.getString(\"Name\"),\r\n                                        object.getString(\"Image\"),\r\n                                        dateFormat.parse(object.getString(\"StartTime\")),\r\n                                        dateFormat.parse(object.getString(\"EndTime\")),\r\n                                        object.getDouble(\"OriginalPrice\"),\r\n                                        object.getDouble(\"SellPrice\"),\r\n                                        object.getInt(\"OriginalQuantity\"),\r\n                                        object.getInt(\"RemainQuantity\"),\r\n                                        object.getString(\"Description\"),\r\n                                        dateFormat.parse(object.getString(\"SellDate\")),\r\n                                        object.getString(\"Status\"),\r\n                                        false));\r\n                            } catch (JSONException | ParseException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                        adapter.notifyDataSetChanged();\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                    }\r\n                });\r\n        requestQueue.add(jsonArrayRequest);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/ListProductSellerFragment.java	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/ListProductSellerFragment.java	(date 1603804889605)
@@ -49,7 +49,7 @@
         arrProduct = new ArrayList<Product>();
         seller_id = bundle.getInt("id");
         String urlGetData = Variable.ipAddress + "seller/getListProductSeller.php?seller_id=" + seller_id;
-        adapter = new ProductSellerAdapter( getActivity().getApplicationContext(), R.layout.list_seller_product , arrProduct);
+        adapter = new ProductSellerAdapter( getActivity().getApplicationContext(), R.layout.list_seller_product , arrProduct, getResources());
         lvProduct.setAdapter(adapter);
         getData(urlGetData);
         return view;
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.wastedfoodteam\"\r\n\r\n        minSdkVersion 26\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n        def secureProps = new Properties()\r\n        if (file(\"../secure.properties\").exists()) {\r\n            file(\"../secure.properties\")?.withInputStream { secureProps.load(it) }\r\n        }\r\n        resValue \"string\", \"maps_api_key\", (secureProps.getProperty(\"MAPS_API_KEY\") ?: \"\")\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation 'com.google.android.gms:play-services-auth:18.1.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation \"com.google.android.gms:play-services-location:15.0.1\"\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n\r\n    //for drawer navigation\r\n    implementation 'com.google.android.material:material:1.2.0-alpha04'\r\n    implementation 'androidx.navigation:navigation-fragment:2.0.0'\r\n    implementation 'androidx.navigation:navigation-ui:2.0.0'\r\n\r\n    //circle image view\r\n    implementation 'de.hdodenhof:circleimageview:2.1.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n\r\n    //Glide\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/build.gradle	(date 1603804560607)
@@ -59,7 +59,6 @@
 
     //circle image view
     implementation 'de.hdodenhof:circleimageview:2.1.0'
-
     implementation 'com.github.bumptech.glide:glide:4.11.0'
 
     //Glide
Index: app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/SendFeedbackSellerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.seller.sellerFragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Scroller;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.wastedfoodteam.R;\r\n\r\nimport java.text.ParseException;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class SendFeedbackSellerFragment extends Fragment {\r\n\r\n    //ui view\r\n    EditText editText_sendFeedback_title;\r\n    EditText editText_sendFeedback_description;\r\n    Button btn_sendFeedback_send;\r\n\r\n    String title,description;\r\n\r\n    int id;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_send_feedback_seller, container, false);\r\n\r\n        //init ui view\r\n        editText_sendFeedback_title = view.findViewById(R.id.editText_sendFeedback_title);\r\n        editText_sendFeedback_description = view.findViewById(R.id.editText_sendFeedback_description);\r\n        btn_sendFeedback_send = view.findViewById(R.id.btn_sendFeedback_send);\r\n\r\n        //for multiline EditText\r\n        //scroll for EditText\r\n        editText_sendFeedback_description.setScroller(new Scroller( getActivity().getApplicationContext()));\r\n        editText_sendFeedback_description.setVerticalScrollBarEnabled(true);\r\n\r\n        //Edit Text Line\r\n        editText_sendFeedback_description.setMinLines(5);\r\n        editText_sendFeedback_description.setMaxLines(5);\r\n\r\n        //get data from home activity\r\n        Bundle bundle = getArguments();\r\n        if(bundle!= null){\r\n            id = bundle.getInt(\"id\");\r\n        }\r\n\r\n        //click send button handle\r\n        btn_sendFeedback_send.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                inputData();\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    private void ClearText(){\r\n        editText_sendFeedback_description.setText(\"\");\r\n        editText_sendFeedback_title.setText(\"\");\r\n    }\r\n\r\n    private void inputData(){\r\n        title = editText_sendFeedback_title.getText().toString();\r\n        description = editText_sendFeedback_description.getText().toString();\r\n\r\n        //validate data\r\n        //TODO\r\n\r\n        //add to db\r\n        addFeedback(\"http://192.168.1.10/wastedfoodphp/seller/sellerFeedback.php\");\r\n\r\n    }\r\n\r\n\r\n\r\n    //add feedback data\r\n    private void addFeedback(String url){\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n                        if(response.trim().equals(\"Succesfully update\")){\r\n                            Toast.makeText(getActivity(),\"Cập nhật thành công\",Toast.LENGTH_SHORT).show();\r\n                            ClearText();\r\n                            //TODO move back to home\r\n                        }else{\r\n                            Toast.makeText(getActivity(),\"Lỗi cập nhật\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(getActivity(),\"Xảy ra lỗi, vui lòng thử lại\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n        ){\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> params = new HashMap<>();\r\n                params.put(\"account_id\", String.valueOf(id));\r\n                params.put(\"title\",title);\r\n                params.put(\"description\", description);\r\n                return params;\r\n            }\r\n        };\r\n        requestQueue.add(stringRequest);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/SendFeedbackSellerFragment.java	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/SendFeedbackSellerFragment.java	(date 1603785369060)
@@ -21,6 +21,7 @@
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
 import com.example.wastedfoodteam.R;
+import com.example.wastedfoodteam.global.Variable;
 
 import java.text.ParseException;
 import java.util.HashMap;
@@ -92,7 +93,8 @@
         //TODO
 
         //add to db
-        addFeedback("http://192.168.1.10/wastedfoodphp/seller/sellerFeedback.php");
+        String urlGetData = Variable.ipAddress + "seller/sellerFeedback.php";
+        addFeedback(urlGetData);
 
     }
 
Index: app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/EditSellerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.seller.sellerFragment;\r\n\r\nimport android.Manifest;\r\nimport android.app.ProgressDialog;\r\nimport android.app.VoiceInteractor;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.provider.MediaStore;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Scroller;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.wastedfoodteam.R;\r\nimport com.example.wastedfoodteam.seller.editSeller.EditSellerActivity;\r\n\r\nimport org.json.JSONArray;\r\n\r\nimport java.text.ParseException;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n\r\npublic class EditSellerFragment extends Fragment {\r\n\r\n    public static final int RESULT_OK = -1;\r\n    private int id ;\r\n\r\n    //ui view\r\n    EditText editText_editSeller_name;\r\n    EditText editText_editSeller_address;\r\n    EditText editText_editSeller_description;\r\n    EditText editText_editSeller_email;\r\n    Button btn_editSeller_edit;\r\n    ImageView iv_editSeller_avatar;\r\n\r\n    //permission constants\r\n    private static final int CAMERA_REQUEST_CODE = 200;\r\n    private static final int STORAGE_REQUEST_CODE = 300;\r\n\r\n    //image pick constants\r\n    private static final int IMAGE_PICK_GALLERY_CODE = 400;\r\n    private static final int IMAGE_PICK_CAMERA_CODE = 500;\r\n\r\n    //permission array\r\n    private String[] cameraPermission;\r\n    private  String[] storagePermission;\r\n\r\n    //image pick uri\r\n    private Uri image_uri;\r\n\r\n    //for editText value\r\n    private String name,address,description;\r\n\r\n    //link to php file\r\n    String urlGetData = \"\";\r\n\r\n    //string get from edit text\r\n    String string_editSeller_name ;\r\n    String string_editSeller_address ;\r\n    String string_editSeller_description ;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    private void inputData() throws ParseException {\r\n        //Get Data In Edit Text\r\n        name = editText_editSeller_name.getText().toString().trim();\r\n        address = editText_editSeller_address.getText().toString();\r\n        description = editText_editSeller_description.getText().toString();\r\n\r\n\r\n\r\n        //Validate\r\n        //TODO Do it later WARNING\r\n\r\n        //TODO Modify in DB\r\n        updateSeller(\"http://192.168.1.10/wastedfoodphp/seller/sellerEdit.php\");\r\n\r\n    }\r\n\r\n    //start of for camera handle\r\n    private void pickFromGallery(){\r\n        //intent to pick image from gallery\r\n        Intent intent = new Intent(Intent.ACTION_PICK);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(intent,IMAGE_PICK_GALLERY_CODE);\r\n    }\r\n\r\n    private void showImagePickDialog(){\r\n        //display in dialog\r\n        String[] options = {\"Camera\",\"Gallery\"};\r\n        //dialog\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        builder.setTitle(\"Pick Image\").setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //handle item clicks\r\n                if(which==0){\r\n                    //camera clicked\r\n                    if(checkCameraPermission()){\r\n                        //permission granted\r\n                        pickFromCamera();\r\n                    }else{\r\n                        //permission not granted, request\r\n                        requestCameraPermission();\r\n                    }\r\n                }else{\r\n                    //gallery clicked\r\n                    if(checkStoragePermission()){\r\n                        //permission granted\r\n                        pickFromGallery();\r\n                    }else{\r\n                        //permission not granted, request\r\n                        requestStoragePermission();\r\n                    }\r\n                }\r\n            }\r\n        }).show();\r\n    }\r\n\r\n    private void pickFromCamera(){\r\n        //intent to pick image from camera\r\n\r\n        //use media store to pick high/ori quality image\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(MediaStore.Images.Media.TITLE,\"Temp_Image_Title\");\r\n        contentValues.put(MediaStore.Images.Media.DESCRIPTION,\"Temp_Image_Description\");\r\n\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,contentValues);\r\n\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        intent.putExtra(MediaStore.EXTRA_OUTPUT,image_uri);\r\n        startActivityForResult(intent,IMAGE_PICK_CAMERA_CODE);\r\n    }\r\n\r\n    private boolean checkStoragePermission(){\r\n        boolean result = ContextCompat.checkSelfPermission(getContext() , Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        return  result; //return true/false\r\n    }\r\n\r\n    private void requestStoragePermission(){\r\n        ActivityCompat.requestPermissions(getActivity(),storagePermission,STORAGE_REQUEST_CODE);\r\n    }\r\n\r\n    private boolean checkCameraPermission(){\r\n        boolean resultCamera = ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CAMERA) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        boolean resultExternalStorage = ContextCompat.checkSelfPermission(getContext(), Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        return resultCamera && resultExternalStorage;\r\n    }\r\n\r\n    private void requestCameraPermission(){\r\n        ActivityCompat.requestPermissions(getActivity(),cameraPermission,CAMERA_REQUEST_CODE);\r\n    }\r\n\r\n    //end of for camera handle\r\n\r\n    //handle image pick result\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        if(resultCode == RESULT_OK){\r\n            if(requestCode == IMAGE_PICK_GALLERY_CODE){\r\n                //image pick from gallery\r\n\r\n                //save picked image uri\r\n                image_uri = data.getData();\r\n\r\n                //image picked from camera\r\n                iv_editSeller_avatar.setImageURI(image_uri);\r\n            }else if(requestCode == IMAGE_PICK_CAMERA_CODE){\r\n                //image pick from camera\r\n                iv_editSeller_avatar.setImageURI(image_uri);\r\n            }\r\n        }\r\n\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_edit_seller, container, false);\r\n\r\n        //init ui view\r\n        editText_editSeller_name = view.findViewById(R.id.editText_editSeller_name);\r\n        editText_editSeller_address = view.findViewById(R.id.editText_editSeller_address);\r\n        editText_editSeller_description = view.findViewById(R.id.editText_editSeller_description);\r\n        btn_editSeller_edit = view.findViewById(R.id.btn_editSeller_edit1);\r\n        iv_editSeller_avatar = view.findViewById(R.id.iv_editSeller_avatar);\r\n\r\n        //TODO get seller from SellerHomeActivity\r\n        Bundle bundle = getArguments();\r\n        if(bundle!= null){\r\n            editText_editSeller_name.setText(bundle.getString(\"name\"));\r\n            editText_editSeller_address.setText(bundle.getString(\"address\"));\r\n            editText_editSeller_description.setText(bundle.getString(\"description\"));\r\n            id = bundle.getInt(\"id\");\r\n        }\r\n\r\n        //string get from edit text\r\n        string_editSeller_name = editText_editSeller_name.getText().toString().trim();\r\n        string_editSeller_address = editText_editSeller_address.getText().toString().trim();\r\n        string_editSeller_description = editText_editSeller_description.getText().toString().trim();\r\n        //string_editSeller_email = editText_editSeller_email.getText().toString().trim();\r\n\r\n        //for multiline EditText\r\n        //scroll for EditText\r\n        editText_editSeller_description.setScroller(new Scroller( getActivity().getApplicationContext()));\r\n        editText_editSeller_description.setVerticalScrollBarEnabled(true);\r\n\r\n        //Edit Text Line\r\n        editText_editSeller_description.setMinLines(2);\r\n        editText_editSeller_description.setMaxLines(5);\r\n\r\n        //init permission arrays\r\n        cameraPermission = new String[]{Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n        storagePermission = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n\r\n        //click avatar handle\r\n        iv_editSeller_avatar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImagePickDialog();\r\n            }\r\n        });\r\n\r\n        //click edit button handle\r\n        btn_editSeller_edit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //Flow\r\n                //input data -> validate -> add to db\r\n                try {\r\n                    inputData();\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n\r\n\r\n    //update seller data\r\n    private void updateSeller(String url){\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n                        if(response.trim().equals(\"Succesfully update\")){\r\n                            Toast.makeText(getActivity(),\"Cập nhật thành công\",Toast.LENGTH_SHORT);\r\n                            //TODO move back to home\r\n                        }else{\r\n                            Toast.makeText(getActivity(),\"Lỗi cập nhật\",Toast.LENGTH_SHORT);\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(getActivity(),\"Xảy ra lỗi, vui lòng thử lại\",Toast.LENGTH_SHORT);\r\n                    }\r\n                }\r\n        ){\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> params = new HashMap<>();\r\n                params.put(\"id\", String.valueOf(id));\r\n                params.put(\"username\",editText_editSeller_name.getText().toString().trim());\r\n                params.put(\"address\",editText_editSeller_address.getText().toString().trim());\r\n                params.put(\"description\",editText_editSeller_description.getText().toString().trim());\r\n                return params;\r\n            }\r\n        };\r\n        requestQueue.add(stringRequest);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/EditSellerFragment.java	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/java/com/example/wastedfoodteam/seller/sellerFragment/EditSellerFragment.java	(date 1603806300699)
@@ -37,11 +37,20 @@
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
 import com.example.wastedfoodteam.R;
+import com.example.wastedfoodteam.global.Variable;
+import com.example.wastedfoodteam.model.Product;
+import com.example.wastedfoodteam.model.Seller;
 import com.example.wastedfoodteam.seller.editSeller.EditSellerActivity;
+import com.example.wastedfoodteam.utils.DownloadImageTask;
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
 
 import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
 
 import java.text.ParseException;
+import java.text.SimpleDateFormat;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -50,6 +59,7 @@
 
     public static final int RESULT_OK = -1;
     private int id ;
+    private Seller sellerInfomation;
 
     //ui view
     EditText editText_editSeller_name;
@@ -90,6 +100,103 @@
         super.onCreate(savedInstanceState);
     }
 
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View view = inflater.inflate(R.layout.fragment_edit_seller, container, false);
+
+        //init ui view
+        editText_editSeller_name = view.findViewById(R.id.editText_editSeller_name);
+        editText_editSeller_address = view.findViewById(R.id.editText_editSeller_address);
+        editText_editSeller_description = view.findViewById(R.id.editText_editSeller_description);
+        btn_editSeller_edit = view.findViewById(R.id.btn_editSeller_edit1);
+        iv_editSeller_avatar = view.findViewById(R.id.iv_editSeller_avatar);
+
+
+        Bundle bundle = getArguments();
+        if(bundle!= null){
+            id = bundle.getInt("id");
+        }
+
+        getSeller(id);
+
+
+        //string get from edit text
+        string_editSeller_name = editText_editSeller_name.getText().toString().trim();
+        string_editSeller_address = editText_editSeller_address.getText().toString().trim();
+        string_editSeller_description = editText_editSeller_description.getText().toString().trim();
+        //string_editSeller_email = editText_editSeller_email.getText().toString().trim();
+
+        //for multiline EditText
+        //scroll for EditText
+        editText_editSeller_description.setScroller(new Scroller( getActivity().getApplicationContext()));
+        editText_editSeller_description.setVerticalScrollBarEnabled(true);
+
+        //Edit Text Line
+        editText_editSeller_description.setMinLines(2);
+        editText_editSeller_description.setMaxLines(5);
+
+        //init permission arrays
+        cameraPermission = new String[]{Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE};
+        storagePermission = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};
+
+        //click avatar handle
+        iv_editSeller_avatar.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showImagePickDialog();
+            }
+        });
+
+        //click edit button handle
+        btn_editSeller_edit.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //Flow
+                //input data -> validate -> add to db
+                try {
+                    inputData();
+                } catch (ParseException e) {
+                    e.printStackTrace();
+                }
+            }
+        });
+        return view;
+    }
+
+    private void getSeller(int id) {
+        urlGetData = Variable.ipAddress + "getSellerById.php?id=" + id;
+        RequestQueue requestQueue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        StringRequest getSellerRequestString = new StringRequest(Request.Method.GET, urlGetData,
+                new Response.Listener<String>() {
+                    @Override
+                    public void onResponse(String response) {
+
+                        try {
+                            JSONArray jsonSellers = new JSONArray(response);
+                            Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd HH:mm:ss").create();
+                            Seller seller = gson.fromJson(jsonSellers.getString(0), Seller.class);
+                            editText_editSeller_name.setText(seller.getName());
+                            editText_editSeller_address.setText(seller.getAddress());
+                            editText_editSeller_description.setText(seller.getDescription());
+                            new DownloadImageTask(iv_editSeller_avatar,getResources()).execute(seller.getImage());
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+
+                },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+
+                    }
+                });
+        requestQueue.add(getSellerRequestString);
+    }
+
     private void inputData() throws ParseException {
         //Get Data In Edit Text
         name = editText_editSeller_name.getText().toString().trim();
@@ -99,10 +206,12 @@
 
 
         //Validate
-        //TODO Do it later WARNING
+        //TODO Do it later
 
-        //TODO Modify in DB
-        updateSeller("http://192.168.1.10/wastedfoodphp/seller/sellerEdit.php");
+        //Modify in DB
+        String urlGetData = Variable.ipAddress + "seller/sellerEdit.php";
+        //updateSeller("http://192.168.1.10/wastedfoodphp/seller/sellerEdit.php");
+        updateSeller(urlGetData);
 
     }
 
@@ -207,70 +316,7 @@
     }
 
 
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        // Inflate the layout for this fragment
-        View view = inflater.inflate(R.layout.fragment_edit_seller, container, false);
-
-        //init ui view
-        editText_editSeller_name = view.findViewById(R.id.editText_editSeller_name);
-        editText_editSeller_address = view.findViewById(R.id.editText_editSeller_address);
-        editText_editSeller_description = view.findViewById(R.id.editText_editSeller_description);
-        btn_editSeller_edit = view.findViewById(R.id.btn_editSeller_edit1);
-        iv_editSeller_avatar = view.findViewById(R.id.iv_editSeller_avatar);
-
-        //TODO get seller from SellerHomeActivity
-        Bundle bundle = getArguments();
-        if(bundle!= null){
-            editText_editSeller_name.setText(bundle.getString("name"));
-            editText_editSeller_address.setText(bundle.getString("address"));
-            editText_editSeller_description.setText(bundle.getString("description"));
-            id = bundle.getInt("id");
-        }
-
-        //string get from edit text
-        string_editSeller_name = editText_editSeller_name.getText().toString().trim();
-        string_editSeller_address = editText_editSeller_address.getText().toString().trim();
-        string_editSeller_description = editText_editSeller_description.getText().toString().trim();
-        //string_editSeller_email = editText_editSeller_email.getText().toString().trim();
 
-        //for multiline EditText
-        //scroll for EditText
-        editText_editSeller_description.setScroller(new Scroller( getActivity().getApplicationContext()));
-        editText_editSeller_description.setVerticalScrollBarEnabled(true);
-
-        //Edit Text Line
-        editText_editSeller_description.setMinLines(2);
-        editText_editSeller_description.setMaxLines(5);
-
-        //init permission arrays
-        cameraPermission = new String[]{Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE};
-        storagePermission = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};
-
-        //click avatar handle
-        iv_editSeller_avatar.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                showImagePickDialog();
-            }
-        });
-
-        //click edit button handle
-        btn_editSeller_edit.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                //Flow
-                //input data -> validate -> add to db
-                try {
-                    inputData();
-                } catch (ParseException e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-        return view;
-    }
 
 
     //update seller data
@@ -281,17 +327,17 @@
                     @Override
                     public void onResponse(String response) {
                         if(response.trim().equals("Succesfully update")){
-                            Toast.makeText(getActivity(),"Cập nhật thành công",Toast.LENGTH_SHORT);
+                            Toast.makeText(getActivity(),"Cập nhật thành công",Toast.LENGTH_SHORT).show();
                             //TODO move back to home
                         }else{
-                            Toast.makeText(getActivity(),"Lỗi cập nhật",Toast.LENGTH_SHORT);
+                            Toast.makeText(getActivity(),"Lỗi cập nhật",Toast.LENGTH_SHORT).show();
                         }
                     }
                 },
                 new Response.ErrorListener() {
                     @Override
                     public void onErrorResponse(VolleyError error) {
-                        Toast.makeText(getActivity(),"Xảy ra lỗi, vui lòng thử lại",Toast.LENGTH_SHORT);
+                        Toast.makeText(getActivity(),"Xảy ra lỗi, vui lòng thử lại",Toast.LENGTH_SHORT).show();
                     }
                 }
         ){
Index: app/src/main/res/layout/fragment_edit_seller.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/fragmentBuyer\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:weightSum=\"10\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_weight=\"8\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        >\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"30dp\"\r\n            android:layout_marginRight=\"30dp\"\r\n            android:layout_marginBottom=\"10dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/iv_editSeller_avatar\"\r\n                android:layout_width=\"150dp\"\r\n                android:layout_height=\"150dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginBottom=\"10dp\"\r\n                android:layout_weight=\"2\"\r\n                android:background=\"@drawable/useravatar\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/editText_editSeller_name\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n\r\n                android:layout_weight=\"2\"\r\n                android:hint=\"Tên:\"\r\n                android:paddingEnd=\"50dp\"\r\n                android:textColorHint=\"#B6ADAD\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/editText_editSeller_address\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n\r\n                android:layout_weight=\"2\"\r\n                android:hint=\"Địa chỉ:\"\r\n                android:paddingEnd=\"50dp\"\r\n                android:textColorHint=\"#B6ADAD\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/editText_editSeller_description\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"2\"\r\n                android:hint=\"Ghi chú:\"\r\n                android:inputType=\"\"\r\n                android:paddingEnd=\"50dp\"\r\n                android:textColorHint=\"#B6ADAD\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_editSeller_edit1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n\r\n                android:text=\"Thay đổi\" />\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_edit_seller.xml	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/res/layout/fragment_edit_seller.xml	(date 1603786241464)
@@ -46,7 +46,6 @@
                 android:id="@+id/editText_editSeller_address"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-
                 android:layout_weight="2"
                 android:hint="Địa chỉ:"
                 android:paddingEnd="50dp"
@@ -66,7 +65,6 @@
                 android:id="@+id/btn_editSeller_edit1"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-
                 android:text="Thay đổi" />
         </LinearLayout>
     </LinearLayout>
Index: app/src/main/java/com/example/wastedfoodteam/global/Variable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.global;\r\n\r\nimport com.example.wastedfoodteam.model.Seller;\r\nimport com.google.android.gms.maps.model.LatLng;\r\n\r\npublic class Variable {\r\n    //public static final String ipAddress =\"http://192.168.1.253/wastedfoodphp/\";//Vutt ip\r\n//    public static final String ipAddress =\"http://10.22.178.239/wastedfoodphp/\";//FPT University ip\r\n//   public static final String ipAddress =\"http://192.168.1.46/wastedfoodphp/\";//TungPT ip\r\n    public static final String ipAddress =\"http://192.168.1.10/wastedfoodphp/\";//DucHC ip\r\n\r\n    //TODO\r\n    //other php variable\r\n    public static final String SEARCH_PRODUCT = \"search/getListProducts.php\";\r\n\r\n    public static final String INSERT_NEW_ORDER = \"order/order.php\";\r\n\r\n    //Order status constraint\r\n    public static final String ORDER_STATUS_ORDERING = \"ORDERING\";\r\n    \r\n    public static final String noImageUrl =\"https://vanhoadoanhnghiepvn.vn/wp-content/uploads/2020/08/112815953-stock-vector-no-image-available-icon-flat-vector.jpg\";\r\n\r\n    public static LatLng gps;\r\n    public static Seller seller;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/global/Variable.java	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/java/com/example/wastedfoodteam/global/Variable.java	(date 1603785319311)
@@ -15,6 +15,7 @@
 
     public static final String INSERT_NEW_ORDER = "order/order.php";
 
+    public static final String ADD_PRODUCT_SELLER = "seller/SellerCreateProduct.php";
     //Order status constraint
     public static final String ORDER_STATUS_ORDERING = "ORDERING";
     
Index: app/src/main/java/com/example/wastedfoodteam/seller/sellerAdapter/ProductSellerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.seller.sellerAdapter;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.wastedfoodteam.R;\r\nimport com.example.wastedfoodteam.global.Variable;\r\nimport com.example.wastedfoodteam.model.Product;\r\nimport com.example.wastedfoodteam.seller.Product1;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class ProductSellerAdapter extends BaseAdapter {\r\n    Context myContext;\r\n    int myLayout;\r\n    List<Product> arrayProduct;\r\n    Product product;\r\n\r\n    private class ViewHolder {\r\n        TextView tvName;\r\n        ImageView ivImage;\r\n        Switch swOnOff;\r\n    }\r\n\r\n    public ProductSellerAdapter(Context context, int layout, List<Product> productList){\r\n        myContext = context;\r\n        myLayout = layout;\r\n        arrayProduct = productList;\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return arrayProduct.size();\r\n    }\r\n\r\n    @Override\r\n    public Object getItem(int position) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        final ViewHolder holder;\r\n\r\n        if (convertView == null) {\r\n            holder = new ViewHolder();\r\n            LayoutInflater inflater = (LayoutInflater) myContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n            convertView = inflater.inflate(myLayout, null);\r\n            holder.tvName = convertView.findViewById(R.id.tv_list_seller_name);\r\n            holder.ivImage = convertView.findViewById(R.id.iv_list_seller_image);\r\n            holder.swOnOff = convertView.findViewById(R.id.sw_list_seller_onOff);\r\n            convertView.setTag(holder);\r\n        } else {\r\n            holder = (ViewHolder) convertView.getTag();\r\n        }\r\n\r\n        product = arrayProduct.get(position);\r\n        if(product.getStatus().equals(\"selling\")){\r\n            holder.swOnOff.setChecked(true);\r\n        }else{\r\n            holder.swOnOff.setChecked(false);\r\n        }\r\n        holder.swOnOff.setTag(position);\r\n        holder.tvName.setText(product.getName());\r\n        Picasso.get().load(product.getImage().isEmpty() ? Variable.noImageUrl : product.getImage()).into(holder.ivImage);//TODO replace with other type\r\n        holder.swOnOff.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(holder.swOnOff.isChecked())\r\n                {\r\n                    int position=(Integer)v.getTag();\r\n                    product = arrayProduct.get(position);\r\n                    Toast.makeText( v.getContext() , \"Switch is on\", Toast.LENGTH_LONG).show();\r\n                    updateProductStatus(\"http://192.168.1.10/wastedfoodphp/seller/setActiveForProduct.php\",\"selling\",product.getId());\r\n                }\r\n                else {\r\n                    int position=(Integer)v.getTag();\r\n                    product = arrayProduct.get(position);\r\n                    Toast.makeText( v.getContext(), \"Switch is Off\", Toast.LENGTH_LONG).show();\r\n                    updateProductStatus(\"http://192.168.1.10/wastedfoodphp/seller/setActiveForProduct.php\" , \"stop\",product.getId());\r\n                }\r\n            }\r\n        });\r\n        return convertView;\r\n    }\r\n\r\n    //update product status\r\n    private void updateProductStatus(String url, final String status , final int id){\r\n        RequestQueue requestQueue = Volley.newRequestQueue(myContext);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n                        if(response.trim().equals(\"Succesfully update\")){\r\n                            Toast.makeText(myContext,\"Cập nhật thành công\",Toast.LENGTH_SHORT).show();\r\n                            //TODO move back to home\r\n                        }else{\r\n                            Toast.makeText( myContext,\"Lỗi cập nhật\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Toast.makeText(myContext,\"Xảy ra lỗi, vui lòng thử lại\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n        ){\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> params = new HashMap<>();\r\n                params.put(\"seller_id\", String.valueOf(product.getSeller_id()));\r\n                params.put(\"status\",  status );\r\n                params.put(\"id\" ,  String.valueOf(id) );\r\n                return params;\r\n            }\r\n        };\r\n        requestQueue.add(stringRequest);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/seller/sellerAdapter/ProductSellerAdapter.java	(revision c54b6b6b8b51cab029a3554949281cca50ce0764)
+++ app/src/main/java/com/example/wastedfoodteam/seller/sellerAdapter/ProductSellerAdapter.java	(date 1603804889654)
@@ -1,6 +1,7 @@
 package com.example.wastedfoodteam.seller.sellerAdapter;
 
 import android.content.Context;
+import android.content.res.Resources;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -23,6 +24,7 @@
 import com.example.wastedfoodteam.global.Variable;
 import com.example.wastedfoodteam.model.Product;
 import com.example.wastedfoodteam.seller.Product1;
+import com.example.wastedfoodteam.utils.DownloadImageTask;
 import com.squareup.picasso.Picasso;
 
 import java.util.HashMap;
@@ -34,6 +36,7 @@
     int myLayout;
     List<Product> arrayProduct;
     Product product;
+    Resources resources;
 
     private class ViewHolder {
         TextView tvName;
@@ -41,10 +44,11 @@
         Switch swOnOff;
     }
 
-    public ProductSellerAdapter(Context context, int layout, List<Product> productList){
+    public ProductSellerAdapter(Context context, int layout, List<Product> productList , Resources resources){
         myContext = context;
         myLayout = layout;
         arrayProduct = productList;
+        this.resources = resources;
     }
 
     @Override
@@ -78,6 +82,7 @@
             holder = (ViewHolder) convertView.getTag();
         }
 
+        final String urlGetData = Variable.ipAddress + "seller/setActiveForProduct.php";
         product = arrayProduct.get(position);
         if(product.getStatus().equals("selling")){
             holder.swOnOff.setChecked(true);
@@ -86,7 +91,10 @@
         }
         holder.swOnOff.setTag(position);
         holder.tvName.setText(product.getName());
-        Picasso.get().load(product.getImage().isEmpty() ? Variable.noImageUrl : product.getImage()).into(holder.ivImage);//TODO replace with other type
+        //get image from url
+        new DownloadImageTask(holder.ivImage,resources).execute(product.getImage());
+        //Picasso.get().load(product.getImage().isEmpty() ? Variable.noImageUrl : product.getImage()).into(holder.ivImage);
+        // TODO replace with other type
         holder.swOnOff.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -95,13 +103,13 @@
                     int position=(Integer)v.getTag();
                     product = arrayProduct.get(position);
                     Toast.makeText( v.getContext() , "Switch is on", Toast.LENGTH_LONG).show();
-                    updateProductStatus("http://192.168.1.10/wastedfoodphp/seller/setActiveForProduct.php","selling",product.getId());
+                    updateProductStatus(urlGetData,"selling",product.getId());
                 }
                 else {
                     int position=(Integer)v.getTag();
                     product = arrayProduct.get(position);
                     Toast.makeText( v.getContext(), "Switch is Off", Toast.LENGTH_LONG).show();
-                    updateProductStatus("http://192.168.1.10/wastedfoodphp/seller/setActiveForProduct.php" , "stop",product.getId());
+                    updateProductStatus(urlGetData, "stop",product.getId());
                 }
             }
         });
