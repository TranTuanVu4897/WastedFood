Index: app/src/main/java/com/example/wastedfoodteam/seller/AddProductActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.seller;\r\n\r\nimport android.Manifest;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.wastedfoodteam.R;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.StorageTask;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\n\r\npublic class AddProductActivity extends AppCompatActivity {\r\n\r\n    //set up firebase\r\n    //tool -> firebase -> authentication\r\n\r\n    //ui view\r\n    private ImageView productIconIv;\r\n    private EditText editTextName;\r\n    private EditText editTextPrice;\r\n    private EditText editTextDiscount;\r\n    private EditText editTextQuantity;\r\n    private EditText editTextOpenDate;\r\n    private EditText editTextCloseDate;\r\n    private Button btnAddProduct;\r\n\r\n    //permission constants\r\n    private static final int CAMERA_REQUEST_CODE = 200;\r\n    private static final int STORAGE_REQUEST_CODE = 300;\r\n\r\n    //image pick constants\r\n    private static final int IMAGE_PICK_GALLERY_CODE = 400;\r\n    private static final int IMAGE_PICK_CAMERA_CODE = 500;\r\n\r\n    //permission array\r\n    private String[] cameraPermission;\r\n    private  String[] storagePermission;\r\n\r\n    //image pick uri\r\n    private Uri image_uri;\r\n\r\n    //firebase connect\r\n    private FirebaseAuth firebaseAuth;\r\n\r\n    //progress dialog\r\n    private ProgressDialog progressDialog;\r\n\r\n\r\n    //connect storage firebase\r\n    private StorageReference mStorageReference;\r\n\r\n    //\r\n    private StorageTask uploadTask;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_add_product);\r\n\r\n\r\n        mStorageReference = FirebaseStorage.getInstance().getReference();\r\n\r\n        //init ui view\r\n        productIconIv = findViewById(R.id.productIconIv);\r\n        editTextName = findViewById(R.id.editTextName);\r\n        editTextPrice = findViewById(R.id.editTextPrice);\r\n        editTextDiscount = findViewById(R.id.editTextDiscount);\r\n        editTextQuantity = findViewById(R.id.editTextQuantity);\r\n        editTextOpenDate = findViewById(R.id.editTextOpenDate);\r\n        editTextCloseDate = findViewById(R.id.editTextCloseDate);\r\n        btnAddProduct = findViewById(R.id.btnAddProduct);\r\n\r\n        //Date picker handle\r\n        Calendar calendar = Calendar.getInstance();\r\n        final int year = calendar.get(Calendar.YEAR);\r\n        final int month = calendar.get(Calendar.MONTH);\r\n        final int day = calendar.get(Calendar.DAY_OF_MONTH);\r\n\r\n        editTextOpenDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                DatePickerDialog datePickerDialog = new DatePickerDialog(AddProductActivity.this, new DatePickerDialog.OnDateSetListener() {\r\n                    @Override\r\n                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                        month = month + 1;\r\n                        String date = dayOfMonth + \"/\" + month + \"/\" + year;\r\n                        editTextOpenDate.setText(date);\r\n                    }\r\n                },year,month,day);\r\n                datePickerDialog.show();\r\n            }\r\n        });\r\n\r\n        editTextCloseDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                DatePickerDialog datePickerDialog = new DatePickerDialog(AddProductActivity.this, new DatePickerDialog.OnDateSetListener() {\r\n                    @Override\r\n                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                        month = month + 1;\r\n                        String date = dayOfMonth + \"/\" + month + \"/\" + year;\r\n                        editTextCloseDate.setText(date);\r\n                    }\r\n                },year,month,day);\r\n                datePickerDialog.show();\r\n            }\r\n        });\r\n\r\n        //firebase\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n\r\n        //set Progress dialog\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n\r\n        //init permission arrays\r\n        cameraPermission = new String[]{Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n        storagePermission = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n\r\n        productIconIv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //show dialog to pick image\r\n                showImagePickDialog();\r\n            }\r\n        });\r\n\r\n        btnAddProduct.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //Flow\r\n                //input data -> validate -> add to db\r\n                try {\r\n                    inputData();\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private String productName;\r\n    private double productPrice;\r\n    private int productQuantity,productDiscount;\r\n    private Date productOpenDate,productCloseDate;\r\n\r\n\r\n\r\n\r\n    private void inputData() throws ParseException {\r\n        //Input Data\r\n        productName = editTextName.getText().toString().trim();\r\n        productPrice = Double.parseDouble(editTextPrice.getText().toString().trim()) ;\r\n        productDiscount = Integer.parseInt(editTextDiscount.getText().toString().trim());\r\n        productQuantity = Integer.parseInt(editTextQuantity.getText().toString().trim());\r\n        //productOpenDate = Calendar.getInstance().getTime();\r\n        //productCloseDate = Calendar.getInstance().getTime();\r\n\r\n        productOpenDate = new SimpleDateFormat(\"dd/MM/yyyy\").parse(editTextOpenDate.getText().toString().trim());\r\n        productCloseDate = new SimpleDateFormat(\"dd/MM/yyyy\").parse(editTextCloseDate.getText().toString().trim());\r\n        //productCloseDate = new SimpleDateFormat(\"hh:mm:ss a\").parse(editTextCloseDate.getText().toString().trim());\r\n\r\n\r\n\r\n        //Validate\r\n        //Do it later WARNING\r\n\r\n        //Add to DB\r\n        addProduct();\r\n    }\r\n\r\n\r\n\r\n\r\n    private void addProduct(){\r\n        progressDialog.setMessage(\"Adding Product\");\r\n        progressDialog.show();\r\n\r\n        String timestamp = \"\" + System.currentTimeMillis();\r\n        if(image_uri == null){\r\n            //upload without image\r\n\r\n            //set up data to upload\r\n            HashMap<String,Object> hashMap = new HashMap<>();\r\n            hashMap.put(\"productId\", \"\" + timestamp);\r\n            hashMap.put(\"productName\", \"\" + productName);\r\n            hashMap.put(\"productPrice\", \"\" + productPrice);\r\n            hashMap.put(\"productDiscount\", \"\" + productDiscount);\r\n            hashMap.put(\"productQuantity\", \"\" + productQuantity);\r\n            hashMap.put(\"productOpenDate\", \"\" + productOpenDate);\r\n            hashMap.put(\"productCloseDate\", \"\" + productCloseDate);\r\n            hashMap.put(\"timestamp\", \"\" + timestamp);\r\n            //hashMap.put(\"uid\", \"\" + firebaseAuth.getUid());\r\n            //need to make user id in future\r\n\r\n            //add to db\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n            //reference.child(firebaseAuth.getUid()).child(\"Products\").child(\"timestamp\").setValue(hashMap)\r\n            reference.child(\"2\").child(\"Products\").child(timestamp).setValue(hashMap)\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void aVoid) {\r\n                    //added to db\r\n                    progressDialog.dismiss();\r\n                    Intent intent = new Intent(AddProductActivity.this, PostActivity.class);\r\n                    startActivity(intent);\r\n                }\r\n            })\r\n            .addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    //failed to db\r\n                    progressDialog.dismiss();\r\n                }\r\n            });\r\n\r\n        }else {\r\n            //upload with image\r\n\r\n            //first upload image to storage\r\n\r\n            //name and path of image to upload\r\n\r\n\r\n\r\n            if(uploadTask != null && uploadTask.isInProgress()){\r\n                Toast.makeText(AddProductActivity.this,\"Upload in progress\" , Toast.LENGTH_LONG).show();\r\n            }else{\r\n                fileUpload();\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private String getExtension(Uri uri){\r\n        //url image handle\r\n        ContentResolver contentResolver = getContentResolver();\r\n        MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();\r\n        return mimeTypeMap.getExtensionFromMimeType(contentResolver.getType(uri));\r\n    }\r\n\r\n    private void fileUpload(){\r\n        StorageReference ref = mStorageReference.child(System.currentTimeMillis() + \".\" + getExtension(image_uri));\r\n\r\n        uploadTask = ref.putFile(image_uri)\r\n                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                        // Get a URL to the uploaded content\r\n                        String downloadUrl = taskSnapshot.getMetadata().getReference().getDownloadUrl().toString();\r\n                        Toast.makeText(AddProductActivity.this,\"Image upload successful\" + downloadUrl , Toast.LENGTH_LONG).show();\r\n\r\n                        String timestamp = \"\" + System.currentTimeMillis();\r\n                        //url of image received upload to db\r\n                        //set up data to upload\r\n                        HashMap<String,Object> hashMap = new HashMap<>();\r\n                        hashMap.put(\"productId\", \"\" + timestamp);\r\n                        hashMap.put(\"productName\", \"\" + productName);\r\n                        hashMap.put(\"productPrice\", \"\" + productPrice);\r\n                        hashMap.put(\"productDiscount\", \"\" + productDiscount);\r\n                        hashMap.put(\"productQuantity\", \"\" + productQuantity);\r\n                        hashMap.put(\"productOpenDate\", \"\" + productOpenDate);\r\n                        hashMap.put(\"productCloseDate\", \"\" + productCloseDate);\r\n                        hashMap.put(\"imageURL\", \"\" + downloadUrl);\r\n\r\n                        //add to db\r\n                        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n                        //reference.child(firebaseAuth.getUid()).child(\"Products\").child(\"timestamp\").setValue(hashMap)\r\n                        //need to make user id in future\r\n                        reference.child(\"2\").child(\"Products\").child(timestamp).setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                //added to db\r\n                                progressDialog.dismiss();\r\n                                Intent intent = new Intent(AddProductActivity.this, PostActivity.class);\r\n                                startActivity(intent);\r\n                            }\r\n                        })\r\n                                .addOnFailureListener(new OnFailureListener() {\r\n                                    @Override\r\n                                    public void onFailure(@NonNull Exception e) {\r\n                                        //failed to db\r\n                                        progressDialog.dismiss();\r\n                                    }\r\n                                });\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception exception) {\r\n                        // Handle unsuccessful uploads\r\n                        // ...\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void pickFromGallery(){\r\n        //intent to pick image from gallery\r\n        Intent intent = new Intent(Intent.ACTION_PICK);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(intent,IMAGE_PICK_GALLERY_CODE);\r\n    }\r\n\r\n    private void showImagePickDialog(){\r\n        //display in dialog\r\n        String[] options = {\"Camera\",\"Gallery\"};\r\n        //dialog\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Pick Image\").setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //handle item clicks\r\n                if(which==0){\r\n                    //camera clicked\r\n                    if(checkCameraPermission()){\r\n                        //permission granted\r\n                        pickFromCamera();\r\n                    }else{\r\n                        //permission not granted, request\r\n                        requestCameraPermission();\r\n                    }\r\n                }else{\r\n                    //gallery clicked\r\n                    if(checkStoragePermission()){\r\n                        //permission granted\r\n                        pickFromGallery();\r\n                    }else{\r\n                        //permission not granted, request\r\n                        requestStoragePermission();\r\n                    }\r\n                }\r\n            }\r\n        }).show();\r\n    }\r\n\r\n    private void pickFromCamera(){\r\n        //intent to pick image from camera\r\n\r\n        //use media store to pick high/ori quality image\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(MediaStore.Images.Media.TITLE,\"Temp_Image_Title\");\r\n        contentValues.put(MediaStore.Images.Media.DESCRIPTION,\"Temp_Image_Description\");\r\n\r\n        image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,contentValues);\r\n\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        intent.putExtra(MediaStore.EXTRA_OUTPUT,image_uri);\r\n        startActivityForResult(intent,IMAGE_PICK_CAMERA_CODE);\r\n    }\r\n\r\n    private boolean checkStoragePermission(){\r\n        boolean result = ContextCompat.checkSelfPermission(this , Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        return  result; //return true/false\r\n    }\r\n\r\n    private void requestStoragePermission(){\r\n        ActivityCompat.requestPermissions(this,storagePermission,STORAGE_REQUEST_CODE);\r\n    }\r\n\r\n    private boolean checkCameraPermission(){\r\n        boolean resultCamera = ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        boolean resultExternalStorage = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);\r\n\r\n        return resultCamera && resultExternalStorage;\r\n    }\r\n\r\n    private void requestCameraPermission(){\r\n        ActivityCompat.requestPermissions(this,cameraPermission,CAMERA_REQUEST_CODE);\r\n    }\r\n\r\n    //handle permission result\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch (requestCode){\r\n            case CAMERA_REQUEST_CODE:{\r\n                if(grantResults.length>0){\r\n                    boolean cameraAccepted = grantResults[0] == PackageManager.PERMISSION_GRANTED;\r\n                    boolean storageAccepted = grantResults[1] == PackageManager.PERMISSION_GRANTED;\r\n                    if(cameraAccepted && storageAccepted){\r\n                        //both accept\r\n                        pickFromCamera();\r\n                    }\r\n                    else{\r\n                        //both of one denied\r\n                        Toast.makeText(this, \"Camera&StoragePermission required\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n            case STORAGE_REQUEST_CODE:{\r\n                if(grantResults.length>0){\r\n                    boolean storageAccepted = grantResults[0] == PackageManager.PERMISSION_GRANTED;\r\n                    if(storageAccepted){\r\n                        //accept\r\n                        pickFromGallery();\r\n                    }\r\n                    else{\r\n                        //denied\r\n                        Toast.makeText(this, \"StoragePermission required\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n    }\r\n\r\n    //handle image pick result\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        if(resultCode == RESULT_OK){\r\n            if(requestCode == IMAGE_PICK_GALLERY_CODE){\r\n                //image pick from gallery\r\n\r\n                //save picked image uri\r\n                image_uri = data.getData();\r\n\r\n                //image picked from camera\r\n                productIconIv.setImageURI(image_uri);\r\n            }else if(requestCode == IMAGE_PICK_CAMERA_CODE){\r\n                //image pick from camera\r\n                productIconIv.setImageURI(image_uri);\r\n            }\r\n        }\r\n\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/seller/AddProductActivity.java	(revision 6cf82bf1922cae40a3f161292331e85067a4ec63)
+++ app/src/main/java/com/example/wastedfoodteam/seller/AddProductActivity.java	(date 1603447523989)
@@ -30,7 +30,6 @@
 import com.example.wastedfoodteam.R;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
-import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.storage.FirebaseStorage;
@@ -75,7 +74,7 @@
     private Uri image_uri;
 
     //firebase connect
-    private FirebaseAuth firebaseAuth;
+    //private FirebaseAuth firebaseAuth;
 
     //progress dialog
     private ProgressDialog progressDialog;
@@ -143,7 +142,7 @@
         });
 
         //firebase
-        firebaseAuth = FirebaseAuth.getInstance();
+        //firebaseAuth = FirebaseAuth.getInstance();
 
         //set Progress dialog
         progressDialog = new ProgressDialog(this);
Index: app/src/main/java/com/example/wastedfoodteam/source/model/Seller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.source.model;\r\n\r\nimport java.sql.Date;\r\n\r\n/**\r\n * Seller class\r\n * author Vutt\r\n */\r\npublic class Seller {\r\n    int account_id;\r\n    String name;\r\n    String image;\r\n    String address;\r\n    double latitude;\r\n    double longitude;\r\n    String description;\r\n\r\n    public int getAccount_id() {\r\n        return account_id;\r\n    }\r\n\r\n    public void setAccount_id(int account_id) {\r\n        this.account_id = account_id;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getImage() {\r\n        return image;\r\n    }\r\n\r\n    public void setImage(String image) {\r\n        this.image = image;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public double getLatitude() {\r\n        return latitude;\r\n    }\r\n\r\n    public void setLatitude(double latitude) {\r\n        this.latitude = latitude;\r\n    }\r\n\r\n    public double getLongitude() {\r\n        return longitude;\r\n    }\r\n\r\n    public void setLongitude(double longitude) {\r\n        this.longitude = longitude;\r\n    }\r\n\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n\r\n    public Seller() {\r\n    }\r\n\r\n    public Seller(int account_id, String name, String image, String address, double latitude, double longitude, String description, Date modified_date) {\r\n        this.account_id = account_id;\r\n        this.name = name;\r\n        this.image = image;\r\n        this.address = address;\r\n        this.latitude = latitude;\r\n        this.longitude = longitude;\r\n        this.description = description;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/source/model/Seller.java	(revision 6cf82bf1922cae40a3f161292331e85067a4ec63)
+++ app/src/main/java/com/example/wastedfoodteam/source/model/Seller.java	(date 1603448949007)
@@ -1,12 +1,13 @@
 package com.example.wastedfoodteam.source.model;
 
+import java.io.Serializable;
 import java.sql.Date;
 
 /**
  * Seller class
  * author Vutt
  */
-public class Seller {
+public class Seller implements Serializable {
     int account_id;
     String name;
     String image;
Index: app/src/main/java/com/example/wastedfoodteam/login/FragmentLoginBuyer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.login;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.wastedfoodteam.R;\r\nimport com.example.wastedfoodteam.buy.BuyHomeActivity;\r\nimport com.example.wastedfoodteam.global.Variable;\r\nimport com.example.wastedfoodteam.source.model.Buyer;\r\nimport com.facebook.AccessToken;\r\nimport com.facebook.CallbackManager;\r\nimport com.facebook.FacebookCallback;\r\nimport com.facebook.FacebookException;\r\nimport com.facebook.login.LoginManager;\r\nimport com.facebook.login.LoginResult;\r\nimport com.facebook.login.widget.LoginButton;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\n\r\nimport org.json.JSONArray;\r\n\r\nimport java.math.BigInteger;\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.util.Arrays;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\n\r\npublic class FragmentLoginBuyer extends Fragment {\r\n    GoogleSignInClient mGoogleSignInClient;\r\n    int RC_SIGN_IN;\r\n    String checkOption = \"\";\r\n    EditText etSDT, etPass;\r\n    TextView tvWarning;\r\n    Button btnSignIn, btnSignInGoogle, btnPartnerOption;\r\n    LoginButton btnSignInFacebook;\r\n    CallbackManager callbackManager;\r\n    String urlGetData = \"\";\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_login_buyer, container, false);\r\n        etSDT = view.findViewById(R.id.etSdtBuyerFLB);\r\n        etPass = view.findViewById(R.id.etPassBuyerFLB);\r\n        tvWarning = view.findViewById(R.id.tvWarningFLB);\r\n        btnSignIn = view.findViewById(R.id.btnSignInBuyerFLB);\r\n        btnSignInGoogle = view.findViewById(R.id.btnGoogleSignInFLB);\r\n        btnSignInFacebook = view.findViewById(R.id.btnFacebookSignInFLB);\r\n        btnPartnerOption = view.findViewById(R.id.btnPartnerOptionFLB);\r\n        handleSignInFacebook();\r\n\r\n        //facebook option\r\n\r\n        callbackManager = CallbackManager.Factory.create();\r\n        btnSignInFacebook.setPermissions(Arrays.asList(\"public_profile\", \"email\"));\r\n        btnSignInFacebook.setFragment(this);\r\n        LoginManager.getInstance().registerCallback(callbackManager, new FacebookCallback<LoginResult>() {\r\n            @Override\r\n            public void onSuccess(LoginResult loginResult) {\r\n//                urlGetData = Variable.ipAddress + \"login/buyerLogin.php?third_party_id=\" + etSDT.getText().toString();\r\n//                getData(urlGetData);\r\n                startActivity(new Intent(getActivity(), BuyHomeActivity.class));\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancel() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(FacebookException error) {\r\n                Toast.makeText(getActivity(), \"Kiểm tra lại kết nối Internet\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n\r\n        //google option\r\n        AddGoogleSignInOption();\r\n        btnSignInGoogle.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                tvWarning.setText(\"\");\r\n//To Do Check Phone\r\n                signInGoogle();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        btnSignIn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (etSDT.getText().toString().length() != 10) {\r\n                    tvWarning.setText(\"SDT không hợp lệ\");\r\n\r\n                } else {\r\n                    urlGetData = Variable.ipAddress + \"login/buyerLogin.php?phone=\" + etSDT.getText().toString() + \"&password=\" + md5(etPass.getText().toString());\r\n                    getData(urlGetData);\r\n                }\r\n            }\r\n        });\r\n        btnPartnerOption.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                addFragmentLoginPartner();\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    /**\r\n     * google sign in option\r\n     */\r\n    private void AddGoogleSignInOption() {\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(getActivity(), gso);\r\n    }\r\n\r\n    /**\r\n     * Start Sign in Google flow\r\n     */\r\n    private void signInGoogle() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, RC_SIGN_IN);\r\n    }\r\n\r\n    /**\r\n     * keep Sign In Google\r\n     *\r\n     * @param completedTask\r\n     */\r\n    private void handleSignInResult(Task<GoogleSignInAccount> completedTask) {\r\n        try {\r\n            GoogleSignInAccount account = completedTask.getResult(ApiException.class);\r\n            startActivity(new Intent(getActivity(), BuyHomeActivity.class));\r\n        } catch (ApiException e) {\r\n            e.printStackTrace();\r\n            Log.w(\"TAG\", \"Failed code\" + e.getStatusCode());\r\n            Log.d(\"Tag\", e.getMessage());\r\n            Toast.makeText(getActivity(), \"Failed Connect \" + e.getStatusCode(), Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check account\r\n     *\r\n     * @param requestCode\r\n     * @param resultCode\r\n     * @param data\r\n     */\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        callbackManager.onActivityResult(requestCode, resultCode, data);\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        try {\r\n            if (requestCode == RC_SIGN_IN) {\r\n                Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n                handleSignInResult(task);\r\n            }\r\n        } catch (Exception e) {\r\n            Log.w(\"SignIn\", \"Code\" + e.getStackTrace());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(getActivity());\r\n        if (account != null) {\r\n            startActivity(new Intent(getActivity(), BuyHomeActivity.class));\r\n        }\r\n        super.onStart();\r\n    }\r\n\r\n    /**\r\n     * Keep Sign In Facebook\r\n     */\r\n    private void handleSignInFacebook() {\r\n        //check loginFB\r\n        if (AccessToken.getCurrentAccessToken() != null && com.facebook.Profile.getCurrentProfile() != null) {\r\n\r\n\r\n            LoginManager.getInstance().logInWithReadPermissions(this, Arrays.asList(\"public_profile\"));\r\n            Intent intent = new Intent(getActivity(), BuyHomeActivity.class);\r\n            checkOption = \"2\";\r\n            intent.putExtra(\"Check_option\", checkOption);\r\n            startActivity(intent);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add fragment login for seller\r\n     *\r\n     */\r\n    public void addFragmentLoginPartner() {\r\n\r\n        FragmentManager fragmentManager = getFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        FragmentLoginPartner fragmentLoginPartner = new FragmentLoginPartner();\r\n        fragmentTransaction.replace(R.id.flFragmentLayoutAM, fragmentLoginPartner);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n    /**\r\n     * encode md5\r\n     *\r\n     * @param str\r\n     * @return\r\n     */\r\n    private String md5(String str) {\r\n        String result = \"\";\r\n        MessageDigest digest;\r\n        try {\r\n            digest = MessageDigest.getInstance(\"MD5\");\r\n            digest.update(str.getBytes());\r\n            BigInteger bigInteger = new BigInteger(1, digest.digest());\r\n            result = bigInteger.toString();\r\n        } catch (NoSuchAlgorithmException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * get data from mySql\r\n     *\r\n     * @param url\r\n     */\r\n    private void getData(String url) {\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity().getApplicationContext());\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                switch (response) {\r\n                    case \"not exist account\":\r\n                    case \"account is locked\":\r\n                        Toast.makeText(getActivity(), \"Mật khẩu sai\", Toast.LENGTH_LONG).show();//TODO fix for suitable error\r\n                        break;\r\n                    case \"not match role\":\r\n                        Toast.makeText(getActivity(), \"lỗi \" + urlGetData, Toast.LENGTH_LONG).show();//TODO fix for suitable error\r\n                        break;\r\n                    case \"PHONE_IS_NULL\":\r\n\r\n                        //startActivity(new Intent(getActivity(),BuyHomeActivity.class));\r\n                    default:\r\n                        Toast.makeText(getActivity(), \"OK\", Toast.LENGTH_LONG).show();//TODO get data\r\n                        try {\r\n                            JSONArray object = new JSONArray(response);\r\n\r\n                            Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd HH:mm:ss\").create();\r\n\r\n                            Buyer buyer = gson.fromJson(object.getString(0), Buyer.class);\r\n\r\n                            sharePreferences();\r\n                            Intent intent = new Intent(getActivity(), BuyHomeActivity.class);\r\n                            checkOption = \"1\";\r\n                            intent.putExtra(\"Check_option\", checkOption);\r\n                            //TODO pass data through intent\r\n                            startActivity(intent);\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        break;\r\n\r\n                }\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Toast.makeText(getActivity(), \"lỗi kết nỗi\" + urlGetData, Toast.LENGTH_LONG).show();//TODO get data\r\n                Log.d(\"MK \", md5(etPass.getText().toString()));\r\n            }\r\n        }\r\n        );\r\n        requestQueue.add(stringRequest);\r\n    }\r\n\r\n    private void sharePreferences() {\r\n        SharedPreferences pre = getActivity().getSharedPreferences(\"my_data\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = pre.edit();\r\n        editor.putString(\"name\", \"Tung\");\r\n        editor.putBoolean(\"check\", true);\r\n        editor.commit();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/login/FragmentLoginBuyer.java	(revision 6cf82bf1922cae40a3f161292331e85067a4ec63)
+++ app/src/main/java/com/example/wastedfoodteam/login/FragmentLoginBuyer.java	(date 1603448385006)
@@ -110,7 +110,7 @@
             @Override
             public void onClick(View v) {
                 tvWarning.setText("");
-//To Do Check Phone
+                //To Do Check Phone
                 signInGoogle();
 
             }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"$USER_HOME$/.gradle/wrapper/dists/gradle-5.6.4-all/ankdp27end7byghfw1q2sw75f/gradle-5.6.4\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 6cf82bf1922cae40a3f161292331e85067a4ec63)
+++ .idea/gradle.xml	(date 1603447464100)
@@ -16,6 +16,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/src/main/java/com/example/wastedfoodteam/login/FragmentLoginPartner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.login;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.wastedfoodteam.R;\r\nimport com.example.wastedfoodteam.buy.BuyHomeActivity;\r\nimport com.example.wastedfoodteam.global.Variable;\r\nimport com.example.wastedfoodteam.source.model.Buyer;\r\nimport com.example.wastedfoodteam.source.model.Seller;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\n\r\nimport org.json.JSONArray;\r\n\r\nimport java.math.BigInteger;\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\n\r\npublic class FragmentLoginPartner extends Fragment {\r\n    Button btnSignIn, btnBuyerOption;\r\n    EditText etSDT, etPass;\r\n    String urlGetData = \"\";\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_login_partner, container, false);\r\n        etSDT = view.findViewById(R.id.etSdtPartnerFLP);\r\n        etPass = view.findViewById(R.id.etPassPartnerFLP);\r\n        btnSignIn = view.findViewById(R.id.btnSignInPartnerFLP);\r\n        btnBuyerOption = view.findViewById(R.id.btnBuyerOptionFLP);\r\n\r\n        btnSignIn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                urlGetData = Variable.ipAddress + \"login/sellerLogin.php?username=\" + etSDT.getText().toString() + \"&password=\" + md5(etPass.getText().toString());\r\n                getData(urlGetData);\r\n            }\r\n        });\r\n\r\n        btnBuyerOption.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                addFragmentLoginPartner();\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n\r\n    /**\r\n     * encode md5\r\n     * @param str\r\n     * @return\r\n     */\r\n    private String md5(String str) {\r\n        String result = \"\";\r\n        MessageDigest digest;\r\n        try {\r\n            digest = MessageDigest.getInstance(\"MD5\");\r\n            digest.update(str.getBytes());\r\n            BigInteger bigInteger = new BigInteger(1, digest.digest());\r\n            result = bigInteger.toString();\r\n        } catch (NoSuchAlgorithmException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * get data from mySql\r\n     * @param url\r\n     */\r\n    private void getData(String url) {\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity().getApplicationContext());\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                switch (response) {\r\n                    case \"not exist account\":\r\n                        Toast.makeText(getActivity(), \"lỗi \" + urlGetData, Toast.LENGTH_LONG).show();//TODO fix for suitable error\r\n                        break;\r\n                    case \"not match role\":\r\n                        Toast.makeText(getActivity(), \"lỗi \" + urlGetData, Toast.LENGTH_LONG).show();//TODO fix for suitable error\r\n                        break;\r\n                    default:\r\n                        Toast.makeText(getActivity(), \"OK\", Toast.LENGTH_LONG).show();//TODO get data\r\n                        try {\r\n                            JSONArray object = new JSONArray(response);\r\n\r\n                            Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd HH:mm:ss\").create();\r\n\r\n                            Seller seller = gson.fromJson(object.getString(0), Seller.class);\r\n\r\n                            Intent intent = new Intent(getActivity(), BuyHomeActivity.class);//TODO change to seller activity\r\n                            //TODO pass data through intent\r\n                            startActivity(intent);\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        break;\r\n\r\n                }\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Toast.makeText(getActivity(), \"lỗi \" + urlGetData, Toast.LENGTH_LONG).show();//TODO get data\r\n                Log.d(\"MK \", md5(etPass.getText().toString()));\r\n            }\r\n        });\r\n        requestQueue.add(stringRequest);\r\n    }\r\n\r\n    /**\r\n     * move to fragment buyer\r\n     */\r\n    public void addFragmentLoginPartner(){\r\n        FragmentManager fragmentManager = getFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        FragmentLoginBuyer fragmentLoginBuyer = new FragmentLoginBuyer();\r\n        fragmentTransaction.replace(R.id.flFragmentLayoutAM,fragmentLoginBuyer);\r\n        fragmentTransaction.commit();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/login/FragmentLoginPartner.java	(revision 6cf82bf1922cae40a3f161292331e85067a4ec63)
+++ app/src/main/java/com/example/wastedfoodteam/login/FragmentLoginPartner.java	(date 1603448949023)
@@ -113,6 +113,7 @@
                             Seller seller = gson.fromJson(object.getString(0), Seller.class);
 
                             Intent intent = new Intent(getActivity(), BuyHomeActivity.class);//TODO change to seller activity
+                            intent.putExtra("SELLER",seller);
                             //TODO pass data through intent
                             startActivity(intent);
                         } catch (Exception e) {
Index: app/src/main/java/com/example/wastedfoodteam/global/Variable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wastedfoodteam.global;\r\n\r\nimport com.example.wastedfoodteam.source.model.Seller;\r\nimport com.google.android.gms.maps.model.LatLng;\r\n\r\npublic class Variable {\r\n    public static final String ipAddress =\"http://192.168.3.4/wastedfoodphp/\";//Vutt ip\r\n//    public static final String ipAddress =\"http://10.22.178.239/wastedfoodphp/\";//FPT University ip\r\n//    public static final String ipAddress =\"http://192.168.1.46/wastedfoodphp/\";//TungPT ip\r\n\r\n    //TODO\r\n    //other php variable\r\n    public static final String searchNormal = \"search/getListProducts.php\";\r\n\r\n\r\n    public static final String noImageUrl =\"https://vanhoadoanhnghiepvn.vn/wp-content/uploads/2020/08/112815953-stock-vector-no-image-available-icon-flat-vector.jpg\";\r\n\r\n    public static LatLng gps;\r\n    public static Seller seller;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/wastedfoodteam/global/Variable.java	(revision 6cf82bf1922cae40a3f161292331e85067a4ec63)
+++ app/src/main/java/com/example/wastedfoodteam/global/Variable.java	(date 1603448216759)
@@ -4,7 +4,7 @@
 import com.google.android.gms.maps.model.LatLng;
 
 public class Variable {
-    public static final String ipAddress ="http://192.168.3.4/wastedfoodphp/";//Vutt ip
+    public static final String ipAddress ="http://192.168.1.253/wastedfoodphp/";//Vutt ip
 //    public static final String ipAddress ="http://10.22.178.239/wastedfoodphp/";//FPT University ip
 //    public static final String ipAddress ="http://192.168.1.46/wastedfoodphp/";//TungPT ip
 
